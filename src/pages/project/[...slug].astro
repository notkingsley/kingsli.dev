---
import BaseLayout from "../../layouts/BaseLayout.astro";

import ContactMe from "../../components/ContactMe.astro";
import Hero from "../../components/Hero.astro";
import Icon from "../../components/Icon.astro";
import ProjectSource from "../../components/ProjectSource.astro";
import ProjectTag from "../../components/ProjectTag.astro";
import { type ProjectEntry } from "../../lib/project_entry";
import { projects } from "../../lib/projects";

import "../../styles/project_page.css";

// This is a dynamic route that generates a page for every file in src/content/
export async function getStaticPaths() {
    return projects.map((entry) => ({
        params: { slug: entry.id },
        props: { entry },
    }));
}

interface Props {
    entry: { data: ProjectEntry; id: string };
}

const { entry } = Astro.props;
---

<BaseLayout title={entry.data.title} description={entry.data.description}>
    <div class="stack gap-20">
        <div class="stack gap-15">
            <header>
                <div class="wrapper stack gap-2">
                    <a class="back-link" href="/projects/"
                        ><Icon icon="arrow-left" /> All Projects</a
                    >
                    {
                        entry.data.img && (
                            <img class="project-image"
                                src={entry.data.img}
                                alt={entry.data.img_alt || ""}
                            />
                        )
                    }
                    <Hero title={entry.data.title} align="start">
                        <div class="details">
                            <div class="tags">
                                {
                                    entry.data.tags.map((t) => (
                                        <ProjectTag tag={t} />
                                    ))
                                }
                                {
                                    entry.data.source && (
                                        <ProjectSource
                                            href={entry.data.source}
                                        />
                                    )
                                }
                                {
                                    entry.data.site && (
                                        <ProjectSource
                                            href={entry.data.site}
                                            kind="Site"
                                        />
                                    )
                                }
                            </div>
                            <p class="description">
                                {entry.data.description}
                            </p>
                        </div>
                    </Hero>
                </div>
            </header>
            <main class="wrapper">
                <div class="stack gap-10 content">
                    <div class="content">
                        <p>{entry.data.content}</p>
                    </div>
                </div>
            </main>
        </div>
        <ContactMe />
    </div>
</BaseLayout>
